/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 * Based on: https://github.com/mcxiaoke/gradle-mvn-push/blob/master/gradle-mvn-push.gradle.
 *
 * For faster runs add: -x check when building Glide.
 */

apply plugin: 'maven-publish'
apply plugin: 'signing'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}


task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            // 上传source，这样使用方可以看到方法注释
            artifact generateSourcesJar
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each { dependency ->
                    def groupId = dependency.group
                    def artifactId = dependency.name
                    if (dependenciesNode instanceof ProjectDependency) {
                        def properties = dependency.getDependencyProject().getProperties()
                        groupId = rootProject.ext.groupId
                        artifactId = properties.name
                    }
                    def dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", groupId)
                    dependencyNode.appendNode("artifactId", artifactId)
                    dependencyNode.appendNode("version", dependency.version)
                }
            }
        }
    }

    repositories { RepositoryHandler handler ->
        handler.mavenLocal()
    }
}

